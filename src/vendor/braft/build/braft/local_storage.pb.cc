// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: braft/local_storage.proto

#include "braft/local_storage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace braft {
class ConfigurationPBMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigurationPBMeta>
      _instance;
} _ConfigurationPBMeta_default_instance_;
class LogPBMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogPBMeta>
      _instance;
} _LogPBMeta_default_instance_;
class StablePBMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StablePBMeta>
      _instance;
} _StablePBMeta_default_instance_;
class LocalSnapshotPbMeta_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalSnapshotPbMeta_File>
      _instance;
} _LocalSnapshotPbMeta_File_default_instance_;
class LocalSnapshotPbMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalSnapshotPbMeta>
      _instance;
} _LocalSnapshotPbMeta_default_instance_;
}  // namespace braft
namespace protobuf_braft_2flocal_5fstorage_2eproto {
void InitDefaultsConfigurationPBMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_ConfigurationPBMeta_default_instance_;
    new (ptr) ::braft::ConfigurationPBMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::ConfigurationPBMeta::InitAsDefaultInstance();
}

void InitDefaultsConfigurationPBMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConfigurationPBMetaImpl);
}

void InitDefaultsLogPBMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_LogPBMeta_default_instance_;
    new (ptr) ::braft::LogPBMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::LogPBMeta::InitAsDefaultInstance();
}

void InitDefaultsLogPBMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogPBMetaImpl);
}

void InitDefaultsStablePBMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_StablePBMeta_default_instance_;
    new (ptr) ::braft::StablePBMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::StablePBMeta::InitAsDefaultInstance();
}

void InitDefaultsStablePBMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStablePBMetaImpl);
}

void InitDefaultsLocalSnapshotPbMeta_FileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_braft_2flocal_5ffile_5fmeta_2eproto::InitDefaultsLocalFileMeta();
  {
    void* ptr = &::braft::_LocalSnapshotPbMeta_File_default_instance_;
    new (ptr) ::braft::LocalSnapshotPbMeta_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::LocalSnapshotPbMeta_File::InitAsDefaultInstance();
}

void InitDefaultsLocalSnapshotPbMeta_File() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalSnapshotPbMeta_FileImpl);
}

void InitDefaultsLocalSnapshotPbMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_braft_2fraft_2eproto::InitDefaultsSnapshotMeta();
  protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMeta_File();
  {
    void* ptr = &::braft::_LocalSnapshotPbMeta_default_instance_;
    new (ptr) ::braft::LocalSnapshotPbMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::LocalSnapshotPbMeta::InitAsDefaultInstance();
}

void InitDefaultsLocalSnapshotPbMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalSnapshotPbMetaImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ConfigurationPBMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ConfigurationPBMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ConfigurationPBMeta, peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ConfigurationPBMeta, old_peers_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LogPBMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LogPBMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LogPBMeta, first_log_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::StablePBMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::StablePBMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::StablePBMeta, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::StablePBMeta, votedfor_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta_File, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta_File, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta_File, meta_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::LocalSnapshotPbMeta, files_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::braft::ConfigurationPBMeta)},
  { 9, 15, sizeof(::braft::LogPBMeta)},
  { 16, 23, sizeof(::braft::StablePBMeta)},
  { 25, 32, sizeof(::braft::LocalSnapshotPbMeta_File)},
  { 34, 41, sizeof(::braft::LocalSnapshotPbMeta)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_ConfigurationPBMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_LogPBMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_StablePBMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_LocalSnapshotPbMeta_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_LocalSnapshotPbMeta_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "braft/local_storage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031braft/local_storage.proto\022\005braft\032\020braf"
      "t/raft.proto\032\033braft/local_file_meta.prot"
      "o\"7\n\023ConfigurationPBMeta\022\r\n\005peers\030\001 \003(\t\022"
      "\021\n\told_peers\030\002 \003(\t\"$\n\tLogPBMeta\022\027\n\017first"
      "_log_index\030\001 \002(\003\".\n\014StablePBMeta\022\014\n\004term"
      "\030\001 \002(\003\022\020\n\010votedfor\030\002 \002(\t\"\242\001\n\023LocalSnapsh"
      "otPbMeta\022!\n\004meta\030\001 \001(\0132\023.braft.SnapshotM"
      "eta\022.\n\005files\030\002 \003(\0132\037.braft.LocalSnapshot"
      "PbMeta.File\0328\n\004File\022\014\n\004name\030\001 \002(\t\022\"\n\004met"
      "a\030\002 \001(\0132\024.braft.LocalFileMeta"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 389);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "braft/local_storage.proto", &protobuf_RegisterTypes);
  ::protobuf_braft_2fraft_2eproto::AddDescriptors();
  ::protobuf_braft_2flocal_5ffile_5fmeta_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_braft_2flocal_5fstorage_2eproto
namespace braft {

// ===================================================================

void ConfigurationPBMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigurationPBMeta::kPeersFieldNumber;
const int ConfigurationPBMeta::kOldPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigurationPBMeta::ConfigurationPBMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsConfigurationPBMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.ConfigurationPBMeta)
}
ConfigurationPBMeta::ConfigurationPBMeta(const ConfigurationPBMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      peers_(from.peers_),
      old_peers_(from.old_peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.ConfigurationPBMeta)
}

void ConfigurationPBMeta::SharedCtor() {
  _cached_size_ = 0;
}

ConfigurationPBMeta::~ConfigurationPBMeta() {
  // @@protoc_insertion_point(destructor:braft.ConfigurationPBMeta)
  SharedDtor();
}

void ConfigurationPBMeta::SharedDtor() {
}

void ConfigurationPBMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigurationPBMeta::descriptor() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigurationPBMeta& ConfigurationPBMeta::default_instance() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsConfigurationPBMeta();
  return *internal_default_instance();
}

ConfigurationPBMeta* ConfigurationPBMeta::New(::google::protobuf::Arena* arena) const {
  ConfigurationPBMeta* n = new ConfigurationPBMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigurationPBMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.ConfigurationPBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  peers_.Clear();
  old_peers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConfigurationPBMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.ConfigurationPBMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string peers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peers(this->peers_size() - 1).data(),
            static_cast<int>(this->peers(this->peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ConfigurationPBMeta.peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string old_peers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_old_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_peers(this->old_peers_size() - 1).data(),
            static_cast<int>(this->old_peers(this->old_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ConfigurationPBMeta.old_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.ConfigurationPBMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.ConfigurationPBMeta)
  return false;
#undef DO_
}

void ConfigurationPBMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.ConfigurationPBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string peers = 1;
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peers(i).data(), static_cast<int>(this->peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ConfigurationPBMeta.peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->peers(i), output);
  }

  // repeated string old_peers = 2;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ConfigurationPBMeta.old_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->old_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.ConfigurationPBMeta)
}

::google::protobuf::uint8* ConfigurationPBMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.ConfigurationPBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string peers = 1;
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peers(i).data(), static_cast<int>(this->peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ConfigurationPBMeta.peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->peers(i), target);
  }

  // repeated string old_peers = 2;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ConfigurationPBMeta.old_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->old_peers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.ConfigurationPBMeta)
  return target;
}

size_t ConfigurationPBMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.ConfigurationPBMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string peers = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peers_size());
  for (int i = 0, n = this->peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peers(i));
  }

  // repeated string old_peers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->old_peers_size());
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->old_peers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigurationPBMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.ConfigurationPBMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigurationPBMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigurationPBMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.ConfigurationPBMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.ConfigurationPBMeta)
    MergeFrom(*source);
  }
}

void ConfigurationPBMeta::MergeFrom(const ConfigurationPBMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.ConfigurationPBMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  peers_.MergeFrom(from.peers_);
  old_peers_.MergeFrom(from.old_peers_);
}

void ConfigurationPBMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.ConfigurationPBMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigurationPBMeta::CopyFrom(const ConfigurationPBMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.ConfigurationPBMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationPBMeta::IsInitialized() const {
  return true;
}

void ConfigurationPBMeta::Swap(ConfigurationPBMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigurationPBMeta::InternalSwap(ConfigurationPBMeta* other) {
  using std::swap;
  peers_.InternalSwap(&other->peers_);
  old_peers_.InternalSwap(&other->old_peers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigurationPBMeta::GetMetadata() const {
  protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogPBMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogPBMeta::kFirstLogIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogPBMeta::LogPBMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLogPBMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.LogPBMeta)
}
LogPBMeta::LogPBMeta(const LogPBMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_log_index_ = from.first_log_index_;
  // @@protoc_insertion_point(copy_constructor:braft.LogPBMeta)
}

void LogPBMeta::SharedCtor() {
  _cached_size_ = 0;
  first_log_index_ = GOOGLE_LONGLONG(0);
}

LogPBMeta::~LogPBMeta() {
  // @@protoc_insertion_point(destructor:braft.LogPBMeta)
  SharedDtor();
}

void LogPBMeta::SharedDtor() {
}

void LogPBMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogPBMeta::descriptor() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogPBMeta& LogPBMeta::default_instance() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLogPBMeta();
  return *internal_default_instance();
}

LogPBMeta* LogPBMeta::New(::google::protobuf::Arena* arena) const {
  LogPBMeta* n = new LogPBMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogPBMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.LogPBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  first_log_index_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogPBMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.LogPBMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 first_log_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_first_log_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.LogPBMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.LogPBMeta)
  return false;
#undef DO_
}

void LogPBMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.LogPBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 first_log_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->first_log_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.LogPBMeta)
}

::google::protobuf::uint8* LogPBMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.LogPBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 first_log_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->first_log_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.LogPBMeta)
  return target;
}

size_t LogPBMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.LogPBMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int64 first_log_index = 1;
  if (has_first_log_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->first_log_index());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogPBMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.LogPBMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const LogPBMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogPBMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.LogPBMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.LogPBMeta)
    MergeFrom(*source);
  }
}

void LogPBMeta::MergeFrom(const LogPBMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.LogPBMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_first_log_index()) {
    set_first_log_index(from.first_log_index());
  }
}

void LogPBMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.LogPBMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogPBMeta::CopyFrom(const LogPBMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.LogPBMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogPBMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LogPBMeta::Swap(LogPBMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogPBMeta::InternalSwap(LogPBMeta* other) {
  using std::swap;
  swap(first_log_index_, other->first_log_index_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogPBMeta::GetMetadata() const {
  protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StablePBMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StablePBMeta::kTermFieldNumber;
const int StablePBMeta::kVotedforFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StablePBMeta::StablePBMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsStablePBMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.StablePBMeta)
}
StablePBMeta::StablePBMeta(const StablePBMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  votedfor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_votedfor()) {
    votedfor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votedfor_);
  }
  term_ = from.term_;
  // @@protoc_insertion_point(copy_constructor:braft.StablePBMeta)
}

void StablePBMeta::SharedCtor() {
  _cached_size_ = 0;
  votedfor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  term_ = GOOGLE_LONGLONG(0);
}

StablePBMeta::~StablePBMeta() {
  // @@protoc_insertion_point(destructor:braft.StablePBMeta)
  SharedDtor();
}

void StablePBMeta::SharedDtor() {
  votedfor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StablePBMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StablePBMeta::descriptor() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StablePBMeta& StablePBMeta::default_instance() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsStablePBMeta();
  return *internal_default_instance();
}

StablePBMeta* StablePBMeta::New(::google::protobuf::Arena* arena) const {
  StablePBMeta* n = new StablePBMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StablePBMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.StablePBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!votedfor_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*votedfor_.UnsafeRawStringPointer())->clear();
  }
  term_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StablePBMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.StablePBMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 term = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_term();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string votedfor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_votedfor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->votedfor().data(), static_cast<int>(this->votedfor().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.StablePBMeta.votedfor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.StablePBMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.StablePBMeta)
  return false;
#undef DO_
}

void StablePBMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.StablePBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 term = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->term(), output);
  }

  // required string votedfor = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->votedfor().data(), static_cast<int>(this->votedfor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.StablePBMeta.votedfor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->votedfor(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.StablePBMeta)
}

::google::protobuf::uint8* StablePBMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.StablePBMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 term = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->term(), target);
  }

  // required string votedfor = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->votedfor().data(), static_cast<int>(this->votedfor().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.StablePBMeta.votedfor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->votedfor(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.StablePBMeta)
  return target;
}

size_t StablePBMeta::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:braft.StablePBMeta)
  size_t total_size = 0;

  if (has_votedfor()) {
    // required string votedfor = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->votedfor());
  }

  if (has_term()) {
    // required int64 term = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->term());
  }

  return total_size;
}
size_t StablePBMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.StablePBMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string votedfor = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->votedfor());

    // required int64 term = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->term());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StablePBMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.StablePBMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const StablePBMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StablePBMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.StablePBMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.StablePBMeta)
    MergeFrom(*source);
  }
}

void StablePBMeta::MergeFrom(const StablePBMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.StablePBMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_votedfor();
      votedfor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.votedfor_);
    }
    if (cached_has_bits & 0x00000002u) {
      term_ = from.term_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StablePBMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.StablePBMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StablePBMeta::CopyFrom(const StablePBMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.StablePBMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StablePBMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void StablePBMeta::Swap(StablePBMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StablePBMeta::InternalSwap(StablePBMeta* other) {
  using std::swap;
  votedfor_.Swap(&other->votedfor_);
  swap(term_, other->term_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StablePBMeta::GetMetadata() const {
  protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalSnapshotPbMeta_File::InitAsDefaultInstance() {
  ::braft::_LocalSnapshotPbMeta_File_default_instance_._instance.get_mutable()->meta_ = const_cast< ::braft::LocalFileMeta*>(
      ::braft::LocalFileMeta::internal_default_instance());
}
void LocalSnapshotPbMeta_File::clear_meta() {
  if (meta_ != NULL) meta_->Clear();
  clear_has_meta();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalSnapshotPbMeta_File::kNameFieldNumber;
const int LocalSnapshotPbMeta_File::kMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalSnapshotPbMeta_File::LocalSnapshotPbMeta_File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMeta_File();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.LocalSnapshotPbMeta.File)
}
LocalSnapshotPbMeta_File::LocalSnapshotPbMeta_File(const LocalSnapshotPbMeta_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_meta()) {
    meta_ = new ::braft::LocalFileMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:braft.LocalSnapshotPbMeta.File)
}

void LocalSnapshotPbMeta_File::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meta_ = NULL;
}

LocalSnapshotPbMeta_File::~LocalSnapshotPbMeta_File() {
  // @@protoc_insertion_point(destructor:braft.LocalSnapshotPbMeta.File)
  SharedDtor();
}

void LocalSnapshotPbMeta_File::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
}

void LocalSnapshotPbMeta_File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalSnapshotPbMeta_File::descriptor() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalSnapshotPbMeta_File& LocalSnapshotPbMeta_File::default_instance() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMeta_File();
  return *internal_default_instance();
}

LocalSnapshotPbMeta_File* LocalSnapshotPbMeta_File::New(::google::protobuf::Arena* arena) const {
  LocalSnapshotPbMeta_File* n = new LocalSnapshotPbMeta_File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalSnapshotPbMeta_File::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.LocalSnapshotPbMeta.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(meta_ != NULL);
      meta_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LocalSnapshotPbMeta_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.LocalSnapshotPbMeta.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.LocalSnapshotPbMeta.File.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .braft.LocalFileMeta meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.LocalSnapshotPbMeta.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.LocalSnapshotPbMeta.File)
  return false;
#undef DO_
}

void LocalSnapshotPbMeta_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.LocalSnapshotPbMeta.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.LocalSnapshotPbMeta.File.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .braft.LocalFileMeta meta = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->meta_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.LocalSnapshotPbMeta.File)
}

::google::protobuf::uint8* LocalSnapshotPbMeta_File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.LocalSnapshotPbMeta.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.LocalSnapshotPbMeta.File.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .braft.LocalFileMeta meta = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->meta_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.LocalSnapshotPbMeta.File)
  return target;
}

size_t LocalSnapshotPbMeta_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.LocalSnapshotPbMeta.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional .braft.LocalFileMeta meta = 2;
  if (has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalSnapshotPbMeta_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.LocalSnapshotPbMeta.File)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalSnapshotPbMeta_File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalSnapshotPbMeta_File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.LocalSnapshotPbMeta.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.LocalSnapshotPbMeta.File)
    MergeFrom(*source);
  }
}

void LocalSnapshotPbMeta_File::MergeFrom(const LocalSnapshotPbMeta_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.LocalSnapshotPbMeta.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_meta()->::braft::LocalFileMeta::MergeFrom(from.meta());
    }
  }
}

void LocalSnapshotPbMeta_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.LocalSnapshotPbMeta.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalSnapshotPbMeta_File::CopyFrom(const LocalSnapshotPbMeta_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.LocalSnapshotPbMeta.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSnapshotPbMeta_File::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LocalSnapshotPbMeta_File::Swap(LocalSnapshotPbMeta_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalSnapshotPbMeta_File::InternalSwap(LocalSnapshotPbMeta_File* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(meta_, other->meta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalSnapshotPbMeta_File::GetMetadata() const {
  protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalSnapshotPbMeta::InitAsDefaultInstance() {
  ::braft::_LocalSnapshotPbMeta_default_instance_._instance.get_mutable()->meta_ = const_cast< ::braft::SnapshotMeta*>(
      ::braft::SnapshotMeta::internal_default_instance());
}
void LocalSnapshotPbMeta::clear_meta() {
  if (meta_ != NULL) meta_->Clear();
  clear_has_meta();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalSnapshotPbMeta::kMetaFieldNumber;
const int LocalSnapshotPbMeta::kFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalSnapshotPbMeta::LocalSnapshotPbMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.LocalSnapshotPbMeta)
}
LocalSnapshotPbMeta::LocalSnapshotPbMeta(const LocalSnapshotPbMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::braft::SnapshotMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:braft.LocalSnapshotPbMeta)
}

void LocalSnapshotPbMeta::SharedCtor() {
  _cached_size_ = 0;
  meta_ = NULL;
}

LocalSnapshotPbMeta::~LocalSnapshotPbMeta() {
  // @@protoc_insertion_point(destructor:braft.LocalSnapshotPbMeta)
  SharedDtor();
}

void LocalSnapshotPbMeta::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
}

void LocalSnapshotPbMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalSnapshotPbMeta::descriptor() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalSnapshotPbMeta& LocalSnapshotPbMeta::default_instance() {
  ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMeta();
  return *internal_default_instance();
}

LocalSnapshotPbMeta* LocalSnapshotPbMeta::New(::google::protobuf::Arena* arena) const {
  LocalSnapshotPbMeta* n = new LocalSnapshotPbMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalSnapshotPbMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.LocalSnapshotPbMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(meta_ != NULL);
    meta_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LocalSnapshotPbMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.LocalSnapshotPbMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .braft.SnapshotMeta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .braft.LocalSnapshotPbMeta.File files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.LocalSnapshotPbMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.LocalSnapshotPbMeta)
  return false;
#undef DO_
}

void LocalSnapshotPbMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.LocalSnapshotPbMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .braft.SnapshotMeta meta = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // repeated .braft.LocalSnapshotPbMeta.File files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->files(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.LocalSnapshotPbMeta)
}

::google::protobuf::uint8* LocalSnapshotPbMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.LocalSnapshotPbMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .braft.SnapshotMeta meta = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // repeated .braft.LocalSnapshotPbMeta.File files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->files(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.LocalSnapshotPbMeta)
  return target;
}

size_t LocalSnapshotPbMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.LocalSnapshotPbMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .braft.LocalSnapshotPbMeta.File files = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  // optional .braft.SnapshotMeta meta = 1;
  if (has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalSnapshotPbMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.LocalSnapshotPbMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalSnapshotPbMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalSnapshotPbMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.LocalSnapshotPbMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.LocalSnapshotPbMeta)
    MergeFrom(*source);
  }
}

void LocalSnapshotPbMeta::MergeFrom(const LocalSnapshotPbMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.LocalSnapshotPbMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (from.has_meta()) {
    mutable_meta()->::braft::SnapshotMeta::MergeFrom(from.meta());
  }
}

void LocalSnapshotPbMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.LocalSnapshotPbMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalSnapshotPbMeta::CopyFrom(const LocalSnapshotPbMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.LocalSnapshotPbMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSnapshotPbMeta::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->files())) return false;
  if (has_meta()) {
    if (!this->meta_->IsInitialized()) return false;
  }
  return true;
}

void LocalSnapshotPbMeta::Swap(LocalSnapshotPbMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalSnapshotPbMeta::InternalSwap(LocalSnapshotPbMeta* other) {
  using std::swap;
  files_.InternalSwap(&other->files_);
  swap(meta_, other->meta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalSnapshotPbMeta::GetMetadata() const {
  protobuf_braft_2flocal_5fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2flocal_5fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace braft

// @@protoc_insertion_point(global_scope)
