// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: braft/cli.proto

#include "braft/cli.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace braft {
class AddPeerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddPeerRequest>
      _instance;
} _AddPeerRequest_default_instance_;
class AddPeerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddPeerResponse>
      _instance;
} _AddPeerResponse_default_instance_;
class RemovePeerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemovePeerRequest>
      _instance;
} _RemovePeerRequest_default_instance_;
class RemovePeerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemovePeerResponse>
      _instance;
} _RemovePeerResponse_default_instance_;
class ChangePeersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangePeersRequest>
      _instance;
} _ChangePeersRequest_default_instance_;
class ChangePeersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChangePeersResponse>
      _instance;
} _ChangePeersResponse_default_instance_;
class SnapshotRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotRequest>
      _instance;
} _SnapshotRequest_default_instance_;
class ResetPeerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetPeerRequest>
      _instance;
} _ResetPeerRequest_default_instance_;
class TransferLeaderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferLeaderRequest>
      _instance;
} _TransferLeaderRequest_default_instance_;
class TransferLeaderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransferLeaderResponse>
      _instance;
} _TransferLeaderResponse_default_instance_;
class ResetPeerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResetPeerResponse>
      _instance;
} _ResetPeerResponse_default_instance_;
class SnapshotResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotResponse>
      _instance;
} _SnapshotResponse_default_instance_;
class GetLeaderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLeaderRequest>
      _instance;
} _GetLeaderRequest_default_instance_;
class GetLeaderResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetLeaderResponse>
      _instance;
} _GetLeaderResponse_default_instance_;
}  // namespace braft
namespace protobuf_braft_2fcli_2eproto {
void InitDefaultsAddPeerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_AddPeerRequest_default_instance_;
    new (ptr) ::braft::AddPeerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::AddPeerRequest::InitAsDefaultInstance();
}

void InitDefaultsAddPeerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddPeerRequestImpl);
}

void InitDefaultsAddPeerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_AddPeerResponse_default_instance_;
    new (ptr) ::braft::AddPeerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::AddPeerResponse::InitAsDefaultInstance();
}

void InitDefaultsAddPeerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAddPeerResponseImpl);
}

void InitDefaultsRemovePeerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_RemovePeerRequest_default_instance_;
    new (ptr) ::braft::RemovePeerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::RemovePeerRequest::InitAsDefaultInstance();
}

void InitDefaultsRemovePeerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemovePeerRequestImpl);
}

void InitDefaultsRemovePeerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_RemovePeerResponse_default_instance_;
    new (ptr) ::braft::RemovePeerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::RemovePeerResponse::InitAsDefaultInstance();
}

void InitDefaultsRemovePeerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemovePeerResponseImpl);
}

void InitDefaultsChangePeersRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_ChangePeersRequest_default_instance_;
    new (ptr) ::braft::ChangePeersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::ChangePeersRequest::InitAsDefaultInstance();
}

void InitDefaultsChangePeersRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangePeersRequestImpl);
}

void InitDefaultsChangePeersResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_ChangePeersResponse_default_instance_;
    new (ptr) ::braft::ChangePeersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::ChangePeersResponse::InitAsDefaultInstance();
}

void InitDefaultsChangePeersResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChangePeersResponseImpl);
}

void InitDefaultsSnapshotRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_SnapshotRequest_default_instance_;
    new (ptr) ::braft::SnapshotRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::SnapshotRequest::InitAsDefaultInstance();
}

void InitDefaultsSnapshotRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapshotRequestImpl);
}

void InitDefaultsResetPeerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_ResetPeerRequest_default_instance_;
    new (ptr) ::braft::ResetPeerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::ResetPeerRequest::InitAsDefaultInstance();
}

void InitDefaultsResetPeerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResetPeerRequestImpl);
}

void InitDefaultsTransferLeaderRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_TransferLeaderRequest_default_instance_;
    new (ptr) ::braft::TransferLeaderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::TransferLeaderRequest::InitAsDefaultInstance();
}

void InitDefaultsTransferLeaderRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferLeaderRequestImpl);
}

void InitDefaultsTransferLeaderResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_TransferLeaderResponse_default_instance_;
    new (ptr) ::braft::TransferLeaderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::TransferLeaderResponse::InitAsDefaultInstance();
}

void InitDefaultsTransferLeaderResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTransferLeaderResponseImpl);
}

void InitDefaultsResetPeerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_ResetPeerResponse_default_instance_;
    new (ptr) ::braft::ResetPeerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::ResetPeerResponse::InitAsDefaultInstance();
}

void InitDefaultsResetPeerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResetPeerResponseImpl);
}

void InitDefaultsSnapshotResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_SnapshotResponse_default_instance_;
    new (ptr) ::braft::SnapshotResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::SnapshotResponse::InitAsDefaultInstance();
}

void InitDefaultsSnapshotResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapshotResponseImpl);
}

void InitDefaultsGetLeaderRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_GetLeaderRequest_default_instance_;
    new (ptr) ::braft::GetLeaderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::GetLeaderRequest::InitAsDefaultInstance();
}

void InitDefaultsGetLeaderRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLeaderRequestImpl);
}

void InitDefaultsGetLeaderResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::braft::_GetLeaderResponse_default_instance_;
    new (ptr) ::braft::GetLeaderResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::braft::GetLeaderResponse::InitAsDefaultInstance();
}

void InitDefaultsGetLeaderResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetLeaderResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerRequest, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerRequest, peer_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerResponse, old_peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::AddPeerResponse, new_peers_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerRequest, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerRequest, peer_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerResponse, old_peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::RemovePeerResponse, new_peers_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersRequest, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersRequest, new_peers_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersResponse, old_peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ChangePeersResponse, new_peers_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::SnapshotRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::SnapshotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::SnapshotRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::SnapshotRequest, peer_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerRequest, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerRequest, old_peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerRequest, new_peers_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderRequest, leader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderRequest, peer_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::TransferLeaderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::ResetPeerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::SnapshotResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::SnapshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderRequest, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderRequest, peer_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::braft::GetLeaderResponse, leader_id_),
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::braft::AddPeerRequest)},
  { 11, 18, sizeof(::braft::AddPeerResponse)},
  { 20, 28, sizeof(::braft::RemovePeerRequest)},
  { 31, 38, sizeof(::braft::RemovePeerResponse)},
  { 40, 48, sizeof(::braft::ChangePeersRequest)},
  { 51, 58, sizeof(::braft::ChangePeersResponse)},
  { 60, 67, sizeof(::braft::SnapshotRequest)},
  { 69, 78, sizeof(::braft::ResetPeerRequest)},
  { 82, 90, sizeof(::braft::TransferLeaderRequest)},
  { 93, 98, sizeof(::braft::TransferLeaderResponse)},
  { 98, 103, sizeof(::braft::ResetPeerResponse)},
  { 103, 108, sizeof(::braft::SnapshotResponse)},
  { 108, 115, sizeof(::braft::GetLeaderRequest)},
  { 117, 123, sizeof(::braft::GetLeaderResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_AddPeerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_AddPeerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_RemovePeerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_RemovePeerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_ChangePeersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_ChangePeersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_SnapshotRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_ResetPeerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_TransferLeaderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_TransferLeaderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_ResetPeerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_SnapshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_GetLeaderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::braft::_GetLeaderResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "braft/cli.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017braft/cli.proto\022\005braft\"F\n\016AddPeerReque"
      "st\022\020\n\010group_id\030\001 \002(\t\022\021\n\tleader_id\030\002 \002(\t\022"
      "\017\n\007peer_id\030\003 \002(\t\"7\n\017AddPeerResponse\022\021\n\to"
      "ld_peers\030\001 \003(\t\022\021\n\tnew_peers\030\002 \003(\t\"I\n\021Rem"
      "ovePeerRequest\022\020\n\010group_id\030\001 \002(\t\022\021\n\tlead"
      "er_id\030\002 \002(\t\022\017\n\007peer_id\030\003 \002(\t\":\n\022RemovePe"
      "erResponse\022\021\n\told_peers\030\001 \003(\t\022\021\n\tnew_pee"
      "rs\030\002 \003(\t\"L\n\022ChangePeersRequest\022\020\n\010group_"
      "id\030\001 \002(\t\022\021\n\tleader_id\030\002 \002(\t\022\021\n\tnew_peers"
      "\030\003 \003(\t\";\n\023ChangePeersResponse\022\021\n\told_pee"
      "rs\030\001 \003(\t\022\021\n\tnew_peers\030\002 \003(\t\"4\n\017SnapshotR"
      "equest\022\020\n\010group_id\030\001 \002(\t\022\017\n\007peer_id\030\002 \001("
      "\t\"[\n\020ResetPeerRequest\022\020\n\010group_id\030\001 \002(\t\022"
      "\017\n\007peer_id\030\002 \002(\t\022\021\n\told_peers\030\003 \003(\t\022\021\n\tn"
      "ew_peers\030\004 \003(\t\"M\n\025TransferLeaderRequest\022"
      "\020\n\010group_id\030\001 \002(\t\022\021\n\tleader_id\030\002 \002(\t\022\017\n\007"
      "peer_id\030\003 \001(\t\"\030\n\026TransferLeaderResponse\""
      "\023\n\021ResetPeerResponse\"\022\n\020SnapshotResponse"
      "\"5\n\020GetLeaderRequest\022\020\n\010group_id\030\001 \002(\t\022\017"
      "\n\007peer_id\030\002 \001(\t\"&\n\021GetLeaderResponse\022\021\n\t"
      "leader_id\030\001 \002(\t2\341\003\n\nCliService\0229\n\010add_pe"
      "er\022\025.braft.AddPeerRequest\032\026.braft.AddPee"
      "rResponse\022B\n\013remove_peer\022\030.braft.RemoveP"
      "eerRequest\032\031.braft.RemovePeerResponse\022E\n"
      "\014change_peers\022\031.braft.ChangePeersRequest"
      "\032\032.braft.ChangePeersResponse\022\?\n\nreset_pe"
      "er\022\027.braft.ResetPeerRequest\032\030.braft.Rese"
      "tPeerResponse\022;\n\010snapshot\022\026.braft.Snapsh"
      "otRequest\032\027.braft.SnapshotResponse\022\?\n\nge"
      "t_leader\022\027.braft.GetLeaderRequest\032\030.braf"
      "t.GetLeaderResponse\022N\n\017transfer_leader\022\034"
      ".braft.TransferLeaderRequest\032\035.braft.Tra"
      "nsferLeaderResponseB\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1304);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "braft/cli.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_braft_2fcli_2eproto
namespace braft {

// ===================================================================

void AddPeerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddPeerRequest::kGroupIdFieldNumber;
const int AddPeerRequest::kLeaderIdFieldNumber;
const int AddPeerRequest::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddPeerRequest::AddPeerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsAddPeerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.AddPeerRequest)
}
AddPeerRequest::AddPeerRequest(const AddPeerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.AddPeerRequest)
}

void AddPeerRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AddPeerRequest::~AddPeerRequest() {
  // @@protoc_insertion_point(destructor:braft.AddPeerRequest)
  SharedDtor();
}

void AddPeerRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddPeerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddPeerRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddPeerRequest& AddPeerRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsAddPeerRequest();
  return *internal_default_instance();
}

AddPeerRequest* AddPeerRequest::New(::google::protobuf::Arena* arena) const {
  AddPeerRequest* n = new AddPeerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.AddPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!leader_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*leader_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!peer_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*peer_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddPeerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.AddPeerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.AddPeerRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string leader_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.AddPeerRequest.leader_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string peer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.AddPeerRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.AddPeerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.AddPeerRequest)
  return false;
#undef DO_
}

void AddPeerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.AddPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerRequest.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leader_id(), output);
  }

  // required string peer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->peer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.AddPeerRequest)
}

::google::protobuf::uint8* AddPeerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.AddPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerRequest.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_id(), target);
  }

  // required string peer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->peer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.AddPeerRequest)
  return target;
}

size_t AddPeerRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:braft.AddPeerRequest)
  size_t total_size = 0;

  if (has_group_id()) {
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  if (has_leader_id()) {
    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }

  if (has_peer_id()) {
    // required string peer_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  return total_size;
}
size_t AddPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.AddPeerRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());

    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());

    // required string peer_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddPeerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.AddPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddPeerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.AddPeerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.AddPeerRequest)
    MergeFrom(*source);
  }
}

void AddPeerRequest::MergeFrom(const AddPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.AddPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader_id();
      leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
  }
}

void AddPeerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.AddPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerRequest::CopyFrom(const AddPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.AddPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AddPeerRequest::Swap(AddPeerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddPeerRequest::InternalSwap(AddPeerRequest* other) {
  using std::swap;
  group_id_.Swap(&other->group_id_);
  leader_id_.Swap(&other->leader_id_);
  peer_id_.Swap(&other->peer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddPeerRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddPeerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddPeerResponse::kOldPeersFieldNumber;
const int AddPeerResponse::kNewPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddPeerResponse::AddPeerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsAddPeerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.AddPeerResponse)
}
AddPeerResponse::AddPeerResponse(const AddPeerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      old_peers_(from.old_peers_),
      new_peers_(from.new_peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.AddPeerResponse)
}

void AddPeerResponse::SharedCtor() {
  _cached_size_ = 0;
}

AddPeerResponse::~AddPeerResponse() {
  // @@protoc_insertion_point(destructor:braft.AddPeerResponse)
  SharedDtor();
}

void AddPeerResponse::SharedDtor() {
}

void AddPeerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddPeerResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddPeerResponse& AddPeerResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsAddPeerResponse();
  return *internal_default_instance();
}

AddPeerResponse* AddPeerResponse::New(::google::protobuf::Arena* arena) const {
  AddPeerResponse* n = new AddPeerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddPeerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.AddPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  old_peers_.Clear();
  new_peers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddPeerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.AddPeerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string old_peers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_old_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_peers(this->old_peers_size() - 1).data(),
            static_cast<int>(this->old_peers(this->old_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.AddPeerResponse.old_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string new_peers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_new_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_peers(this->new_peers_size() - 1).data(),
            static_cast<int>(this->new_peers(this->new_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.AddPeerResponse.new_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.AddPeerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.AddPeerResponse)
  return false;
#undef DO_
}

void AddPeerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.AddPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string old_peers = 1;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerResponse.old_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->old_peers(i), output);
  }

  // repeated string new_peers = 2;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerResponse.new_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->new_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.AddPeerResponse)
}

::google::protobuf::uint8* AddPeerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.AddPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string old_peers = 1;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerResponse.old_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->old_peers(i), target);
  }

  // repeated string new_peers = 2;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.AddPeerResponse.new_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->new_peers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.AddPeerResponse)
  return target;
}

size_t AddPeerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.AddPeerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string old_peers = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->old_peers_size());
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->old_peers(i));
  }

  // repeated string new_peers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_peers_size());
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->new_peers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddPeerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.AddPeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPeerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddPeerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.AddPeerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.AddPeerResponse)
    MergeFrom(*source);
  }
}

void AddPeerResponse::MergeFrom(const AddPeerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.AddPeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  old_peers_.MergeFrom(from.old_peers_);
  new_peers_.MergeFrom(from.new_peers_);
}

void AddPeerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.AddPeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPeerResponse::CopyFrom(const AddPeerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.AddPeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPeerResponse::IsInitialized() const {
  return true;
}

void AddPeerResponse::Swap(AddPeerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddPeerResponse::InternalSwap(AddPeerResponse* other) {
  using std::swap;
  old_peers_.InternalSwap(&other->old_peers_);
  new_peers_.InternalSwap(&other->new_peers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddPeerResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemovePeerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemovePeerRequest::kGroupIdFieldNumber;
const int RemovePeerRequest::kLeaderIdFieldNumber;
const int RemovePeerRequest::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemovePeerRequest::RemovePeerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsRemovePeerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.RemovePeerRequest)
}
RemovePeerRequest::RemovePeerRequest(const RemovePeerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.RemovePeerRequest)
}

void RemovePeerRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemovePeerRequest::~RemovePeerRequest() {
  // @@protoc_insertion_point(destructor:braft.RemovePeerRequest)
  SharedDtor();
}

void RemovePeerRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemovePeerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemovePeerRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemovePeerRequest& RemovePeerRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsRemovePeerRequest();
  return *internal_default_instance();
}

RemovePeerRequest* RemovePeerRequest::New(::google::protobuf::Arena* arena) const {
  RemovePeerRequest* n = new RemovePeerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemovePeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.RemovePeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!leader_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*leader_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!peer_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*peer_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemovePeerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.RemovePeerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.RemovePeerRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string leader_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.RemovePeerRequest.leader_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string peer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.RemovePeerRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.RemovePeerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.RemovePeerRequest)
  return false;
#undef DO_
}

void RemovePeerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.RemovePeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerRequest.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leader_id(), output);
  }

  // required string peer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->peer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.RemovePeerRequest)
}

::google::protobuf::uint8* RemovePeerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.RemovePeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerRequest.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_id(), target);
  }

  // required string peer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->peer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.RemovePeerRequest)
  return target;
}

size_t RemovePeerRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:braft.RemovePeerRequest)
  size_t total_size = 0;

  if (has_group_id()) {
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  if (has_leader_id()) {
    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }

  if (has_peer_id()) {
    // required string peer_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  return total_size;
}
size_t RemovePeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.RemovePeerRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());

    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());

    // required string peer_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemovePeerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.RemovePeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemovePeerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.RemovePeerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.RemovePeerRequest)
    MergeFrom(*source);
  }
}

void RemovePeerRequest::MergeFrom(const RemovePeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.RemovePeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader_id();
      leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
  }
}

void RemovePeerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.RemovePeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerRequest::CopyFrom(const RemovePeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.RemovePeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void RemovePeerRequest::Swap(RemovePeerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemovePeerRequest::InternalSwap(RemovePeerRequest* other) {
  using std::swap;
  group_id_.Swap(&other->group_id_);
  leader_id_.Swap(&other->leader_id_);
  peer_id_.Swap(&other->peer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemovePeerRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemovePeerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemovePeerResponse::kOldPeersFieldNumber;
const int RemovePeerResponse::kNewPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemovePeerResponse::RemovePeerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsRemovePeerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.RemovePeerResponse)
}
RemovePeerResponse::RemovePeerResponse(const RemovePeerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      old_peers_(from.old_peers_),
      new_peers_(from.new_peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.RemovePeerResponse)
}

void RemovePeerResponse::SharedCtor() {
  _cached_size_ = 0;
}

RemovePeerResponse::~RemovePeerResponse() {
  // @@protoc_insertion_point(destructor:braft.RemovePeerResponse)
  SharedDtor();
}

void RemovePeerResponse::SharedDtor() {
}

void RemovePeerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemovePeerResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemovePeerResponse& RemovePeerResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsRemovePeerResponse();
  return *internal_default_instance();
}

RemovePeerResponse* RemovePeerResponse::New(::google::protobuf::Arena* arena) const {
  RemovePeerResponse* n = new RemovePeerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemovePeerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.RemovePeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  old_peers_.Clear();
  new_peers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemovePeerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.RemovePeerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string old_peers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_old_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_peers(this->old_peers_size() - 1).data(),
            static_cast<int>(this->old_peers(this->old_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.RemovePeerResponse.old_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string new_peers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_new_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_peers(this->new_peers_size() - 1).data(),
            static_cast<int>(this->new_peers(this->new_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.RemovePeerResponse.new_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.RemovePeerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.RemovePeerResponse)
  return false;
#undef DO_
}

void RemovePeerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.RemovePeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string old_peers = 1;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerResponse.old_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->old_peers(i), output);
  }

  // repeated string new_peers = 2;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerResponse.new_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->new_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.RemovePeerResponse)
}

::google::protobuf::uint8* RemovePeerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.RemovePeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string old_peers = 1;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerResponse.old_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->old_peers(i), target);
  }

  // repeated string new_peers = 2;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.RemovePeerResponse.new_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->new_peers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.RemovePeerResponse)
  return target;
}

size_t RemovePeerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.RemovePeerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string old_peers = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->old_peers_size());
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->old_peers(i));
  }

  // repeated string new_peers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_peers_size());
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->new_peers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemovePeerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.RemovePeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePeerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemovePeerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.RemovePeerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.RemovePeerResponse)
    MergeFrom(*source);
  }
}

void RemovePeerResponse::MergeFrom(const RemovePeerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.RemovePeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  old_peers_.MergeFrom(from.old_peers_);
  new_peers_.MergeFrom(from.new_peers_);
}

void RemovePeerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.RemovePeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePeerResponse::CopyFrom(const RemovePeerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.RemovePeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePeerResponse::IsInitialized() const {
  return true;
}

void RemovePeerResponse::Swap(RemovePeerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemovePeerResponse::InternalSwap(RemovePeerResponse* other) {
  using std::swap;
  old_peers_.InternalSwap(&other->old_peers_);
  new_peers_.InternalSwap(&other->new_peers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemovePeerResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangePeersRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangePeersRequest::kGroupIdFieldNumber;
const int ChangePeersRequest::kLeaderIdFieldNumber;
const int ChangePeersRequest::kNewPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangePeersRequest::ChangePeersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsChangePeersRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.ChangePeersRequest)
}
ChangePeersRequest::ChangePeersRequest(const ChangePeersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      new_peers_(from.new_peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.ChangePeersRequest)
}

void ChangePeersRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChangePeersRequest::~ChangePeersRequest() {
  // @@protoc_insertion_point(destructor:braft.ChangePeersRequest)
  SharedDtor();
}

void ChangePeersRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChangePeersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangePeersRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangePeersRequest& ChangePeersRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsChangePeersRequest();
  return *internal_default_instance();
}

ChangePeersRequest* ChangePeersRequest::New(::google::protobuf::Arena* arena) const {
  ChangePeersRequest* n = new ChangePeersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangePeersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.ChangePeersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_peers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!leader_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*leader_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangePeersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.ChangePeersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ChangePeersRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string leader_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ChangePeersRequest.leader_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string new_peers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_new_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_peers(this->new_peers_size() - 1).data(),
            static_cast<int>(this->new_peers(this->new_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ChangePeersRequest.new_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.ChangePeersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.ChangePeersRequest)
  return false;
#undef DO_
}

void ChangePeersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.ChangePeersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersRequest.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leader_id(), output);
  }

  // repeated string new_peers = 3;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersRequest.new_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->new_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.ChangePeersRequest)
}

::google::protobuf::uint8* ChangePeersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.ChangePeersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersRequest.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_id(), target);
  }

  // repeated string new_peers = 3;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersRequest.new_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->new_peers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.ChangePeersRequest)
  return target;
}

size_t ChangePeersRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:braft.ChangePeersRequest)
  size_t total_size = 0;

  if (has_group_id()) {
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  if (has_leader_id()) {
    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }

  return total_size;
}
size_t ChangePeersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.ChangePeersRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());

    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string new_peers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_peers_size());
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->new_peers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangePeersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.ChangePeersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangePeersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangePeersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.ChangePeersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.ChangePeersRequest)
    MergeFrom(*source);
  }
}

void ChangePeersRequest::MergeFrom(const ChangePeersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.ChangePeersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  new_peers_.MergeFrom(from.new_peers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader_id();
      leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
    }
  }
}

void ChangePeersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.ChangePeersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePeersRequest::CopyFrom(const ChangePeersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.ChangePeersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePeersRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ChangePeersRequest::Swap(ChangePeersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangePeersRequest::InternalSwap(ChangePeersRequest* other) {
  using std::swap;
  new_peers_.InternalSwap(&other->new_peers_);
  group_id_.Swap(&other->group_id_);
  leader_id_.Swap(&other->leader_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangePeersRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChangePeersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangePeersResponse::kOldPeersFieldNumber;
const int ChangePeersResponse::kNewPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangePeersResponse::ChangePeersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsChangePeersResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.ChangePeersResponse)
}
ChangePeersResponse::ChangePeersResponse(const ChangePeersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      old_peers_(from.old_peers_),
      new_peers_(from.new_peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.ChangePeersResponse)
}

void ChangePeersResponse::SharedCtor() {
  _cached_size_ = 0;
}

ChangePeersResponse::~ChangePeersResponse() {
  // @@protoc_insertion_point(destructor:braft.ChangePeersResponse)
  SharedDtor();
}

void ChangePeersResponse::SharedDtor() {
}

void ChangePeersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangePeersResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChangePeersResponse& ChangePeersResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsChangePeersResponse();
  return *internal_default_instance();
}

ChangePeersResponse* ChangePeersResponse::New(::google::protobuf::Arena* arena) const {
  ChangePeersResponse* n = new ChangePeersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangePeersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.ChangePeersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  old_peers_.Clear();
  new_peers_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ChangePeersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.ChangePeersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string old_peers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_old_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_peers(this->old_peers_size() - 1).data(),
            static_cast<int>(this->old_peers(this->old_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ChangePeersResponse.old_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string new_peers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_new_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_peers(this->new_peers_size() - 1).data(),
            static_cast<int>(this->new_peers(this->new_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ChangePeersResponse.new_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.ChangePeersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.ChangePeersResponse)
  return false;
#undef DO_
}

void ChangePeersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.ChangePeersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string old_peers = 1;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersResponse.old_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->old_peers(i), output);
  }

  // repeated string new_peers = 2;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersResponse.new_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->new_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.ChangePeersResponse)
}

::google::protobuf::uint8* ChangePeersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.ChangePeersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string old_peers = 1;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersResponse.old_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->old_peers(i), target);
  }

  // repeated string new_peers = 2;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ChangePeersResponse.new_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->new_peers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.ChangePeersResponse)
  return target;
}

size_t ChangePeersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.ChangePeersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string old_peers = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->old_peers_size());
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->old_peers(i));
  }

  // repeated string new_peers = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_peers_size());
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->new_peers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangePeersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.ChangePeersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangePeersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangePeersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.ChangePeersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.ChangePeersResponse)
    MergeFrom(*source);
  }
}

void ChangePeersResponse::MergeFrom(const ChangePeersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.ChangePeersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  old_peers_.MergeFrom(from.old_peers_);
  new_peers_.MergeFrom(from.new_peers_);
}

void ChangePeersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.ChangePeersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePeersResponse::CopyFrom(const ChangePeersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.ChangePeersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangePeersResponse::IsInitialized() const {
  return true;
}

void ChangePeersResponse::Swap(ChangePeersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangePeersResponse::InternalSwap(ChangePeersResponse* other) {
  using std::swap;
  old_peers_.InternalSwap(&other->old_peers_);
  new_peers_.InternalSwap(&other->new_peers_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangePeersResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotRequest::kGroupIdFieldNumber;
const int SnapshotRequest::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotRequest::SnapshotRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsSnapshotRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.SnapshotRequest)
}
SnapshotRequest::SnapshotRequest(const SnapshotRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.SnapshotRequest)
}

void SnapshotRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SnapshotRequest::~SnapshotRequest() {
  // @@protoc_insertion_point(destructor:braft.SnapshotRequest)
  SharedDtor();
}

void SnapshotRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SnapshotRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapshotRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotRequest& SnapshotRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsSnapshotRequest();
  return *internal_default_instance();
}

SnapshotRequest* SnapshotRequest::New(::google::protobuf::Arena* arena) const {
  SnapshotRequest* n = new SnapshotRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.SnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!peer_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*peer_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnapshotRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.SnapshotRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.SnapshotRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.SnapshotRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.SnapshotRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.SnapshotRequest)
  return false;
#undef DO_
}

void SnapshotRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.SnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.SnapshotRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // optional string peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.SnapshotRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->peer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.SnapshotRequest)
}

::google::protobuf::uint8* SnapshotRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.SnapshotRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.SnapshotRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // optional string peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.SnapshotRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->peer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.SnapshotRequest)
  return target;
}

size_t SnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.SnapshotRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string group_id = 1;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }
  // optional string peer_id = 2;
  if (has_peer_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapshotRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.SnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.SnapshotRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.SnapshotRequest)
    MergeFrom(*source);
  }
}

void SnapshotRequest::MergeFrom(const SnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.SnapshotRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
  }
}

void SnapshotRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.SnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotRequest::CopyFrom(const SnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.SnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SnapshotRequest::Swap(SnapshotRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotRequest::InternalSwap(SnapshotRequest* other) {
  using std::swap;
  group_id_.Swap(&other->group_id_);
  peer_id_.Swap(&other->peer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapshotRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetPeerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetPeerRequest::kGroupIdFieldNumber;
const int ResetPeerRequest::kPeerIdFieldNumber;
const int ResetPeerRequest::kOldPeersFieldNumber;
const int ResetPeerRequest::kNewPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetPeerRequest::ResetPeerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsResetPeerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.ResetPeerRequest)
}
ResetPeerRequest::ResetPeerRequest(const ResetPeerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      old_peers_(from.old_peers_),
      new_peers_(from.new_peers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.ResetPeerRequest)
}

void ResetPeerRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResetPeerRequest::~ResetPeerRequest() {
  // @@protoc_insertion_point(destructor:braft.ResetPeerRequest)
  SharedDtor();
}

void ResetPeerRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResetPeerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetPeerRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetPeerRequest& ResetPeerRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsResetPeerRequest();
  return *internal_default_instance();
}

ResetPeerRequest* ResetPeerRequest::New(::google::protobuf::Arena* arena) const {
  ResetPeerRequest* n = new ResetPeerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.ResetPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  old_peers_.Clear();
  new_peers_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!peer_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*peer_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResetPeerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.ResetPeerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ResetPeerRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ResetPeerRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string old_peers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_old_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_peers(this->old_peers_size() - 1).data(),
            static_cast<int>(this->old_peers(this->old_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ResetPeerRequest.old_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string new_peers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_new_peers()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_peers(this->new_peers_size() - 1).data(),
            static_cast<int>(this->new_peers(this->new_peers_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.ResetPeerRequest.new_peers");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.ResetPeerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.ResetPeerRequest)
  return false;
#undef DO_
}

void ResetPeerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.ResetPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // required string peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->peer_id(), output);
  }

  // repeated string old_peers = 3;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.old_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->old_peers(i), output);
  }

  // repeated string new_peers = 4;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.new_peers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->new_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.ResetPeerRequest)
}

::google::protobuf::uint8* ResetPeerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.ResetPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // required string peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->peer_id(), target);
  }

  // repeated string old_peers = 3;
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_peers(i).data(), static_cast<int>(this->old_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.old_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->old_peers(i), target);
  }

  // repeated string new_peers = 4;
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_peers(i).data(), static_cast<int>(this->new_peers(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.ResetPeerRequest.new_peers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->new_peers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.ResetPeerRequest)
  return target;
}

size_t ResetPeerRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:braft.ResetPeerRequest)
  size_t total_size = 0;

  if (has_group_id()) {
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  if (has_peer_id()) {
    // required string peer_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  return total_size;
}
size_t ResetPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.ResetPeerRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());

    // required string peer_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string old_peers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->old_peers_size());
  for (int i = 0, n = this->old_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->old_peers(i));
  }

  // repeated string new_peers = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->new_peers_size());
  for (int i = 0, n = this->new_peers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->new_peers(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetPeerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.ResetPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPeerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetPeerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.ResetPeerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.ResetPeerRequest)
    MergeFrom(*source);
  }
}

void ResetPeerRequest::MergeFrom(const ResetPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.ResetPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  old_peers_.MergeFrom(from.old_peers_);
  new_peers_.MergeFrom(from.new_peers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
  }
}

void ResetPeerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.ResetPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPeerRequest::CopyFrom(const ResetPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.ResetPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPeerRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void ResetPeerRequest::Swap(ResetPeerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetPeerRequest::InternalSwap(ResetPeerRequest* other) {
  using std::swap;
  old_peers_.InternalSwap(&other->old_peers_);
  new_peers_.InternalSwap(&other->new_peers_);
  group_id_.Swap(&other->group_id_);
  peer_id_.Swap(&other->peer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetPeerRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferLeaderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferLeaderRequest::kGroupIdFieldNumber;
const int TransferLeaderRequest::kLeaderIdFieldNumber;
const int TransferLeaderRequest::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferLeaderRequest::TransferLeaderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsTransferLeaderRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.TransferLeaderRequest)
}
TransferLeaderRequest::TransferLeaderRequest(const TransferLeaderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.TransferLeaderRequest)
}

void TransferLeaderRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TransferLeaderRequest::~TransferLeaderRequest() {
  // @@protoc_insertion_point(destructor:braft.TransferLeaderRequest)
  SharedDtor();
}

void TransferLeaderRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferLeaderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferLeaderRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferLeaderRequest& TransferLeaderRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsTransferLeaderRequest();
  return *internal_default_instance();
}

TransferLeaderRequest* TransferLeaderRequest::New(::google::protobuf::Arena* arena) const {
  TransferLeaderRequest* n = new TransferLeaderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferLeaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.TransferLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!leader_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*leader_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!peer_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*peer_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferLeaderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.TransferLeaderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.TransferLeaderRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string leader_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.TransferLeaderRequest.leader_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string peer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.TransferLeaderRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.TransferLeaderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.TransferLeaderRequest)
  return false;
#undef DO_
}

void TransferLeaderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.TransferLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.TransferLeaderRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.TransferLeaderRequest.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->leader_id(), output);
  }

  // optional string peer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.TransferLeaderRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->peer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.TransferLeaderRequest)
}

::google::protobuf::uint8* TransferLeaderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.TransferLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.TransferLeaderRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // required string leader_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.TransferLeaderRequest.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->leader_id(), target);
  }

  // optional string peer_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.TransferLeaderRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->peer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.TransferLeaderRequest)
  return target;
}

size_t TransferLeaderRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:braft.TransferLeaderRequest)
  size_t total_size = 0;

  if (has_group_id()) {
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }

  if (has_leader_id()) {
    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }

  return total_size;
}
size_t TransferLeaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.TransferLeaderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string group_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());

    // required string leader_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string peer_id = 3;
  if (has_peer_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferLeaderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.TransferLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferLeaderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferLeaderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.TransferLeaderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.TransferLeaderRequest)
    MergeFrom(*source);
  }
}

void TransferLeaderRequest::MergeFrom(const TransferLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.TransferLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leader_id();
      leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
  }
}

void TransferLeaderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.TransferLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferLeaderRequest::CopyFrom(const TransferLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.TransferLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferLeaderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TransferLeaderRequest::Swap(TransferLeaderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferLeaderRequest::InternalSwap(TransferLeaderRequest* other) {
  using std::swap;
  group_id_.Swap(&other->group_id_);
  leader_id_.Swap(&other->leader_id_);
  peer_id_.Swap(&other->peer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferLeaderRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransferLeaderResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferLeaderResponse::TransferLeaderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsTransferLeaderResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.TransferLeaderResponse)
}
TransferLeaderResponse::TransferLeaderResponse(const TransferLeaderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.TransferLeaderResponse)
}

void TransferLeaderResponse::SharedCtor() {
  _cached_size_ = 0;
}

TransferLeaderResponse::~TransferLeaderResponse() {
  // @@protoc_insertion_point(destructor:braft.TransferLeaderResponse)
  SharedDtor();
}

void TransferLeaderResponse::SharedDtor() {
}

void TransferLeaderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferLeaderResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransferLeaderResponse& TransferLeaderResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsTransferLeaderResponse();
  return *internal_default_instance();
}

TransferLeaderResponse* TransferLeaderResponse::New(::google::protobuf::Arena* arena) const {
  TransferLeaderResponse* n = new TransferLeaderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferLeaderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.TransferLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TransferLeaderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.TransferLeaderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:braft.TransferLeaderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.TransferLeaderResponse)
  return false;
#undef DO_
}

void TransferLeaderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.TransferLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.TransferLeaderResponse)
}

::google::protobuf::uint8* TransferLeaderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.TransferLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.TransferLeaderResponse)
  return target;
}

size_t TransferLeaderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.TransferLeaderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferLeaderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.TransferLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransferLeaderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferLeaderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.TransferLeaderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.TransferLeaderResponse)
    MergeFrom(*source);
  }
}

void TransferLeaderResponse::MergeFrom(const TransferLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.TransferLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransferLeaderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.TransferLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferLeaderResponse::CopyFrom(const TransferLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.TransferLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferLeaderResponse::IsInitialized() const {
  return true;
}

void TransferLeaderResponse::Swap(TransferLeaderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferLeaderResponse::InternalSwap(TransferLeaderResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferLeaderResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResetPeerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetPeerResponse::ResetPeerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsResetPeerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.ResetPeerResponse)
}
ResetPeerResponse::ResetPeerResponse(const ResetPeerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.ResetPeerResponse)
}

void ResetPeerResponse::SharedCtor() {
  _cached_size_ = 0;
}

ResetPeerResponse::~ResetPeerResponse() {
  // @@protoc_insertion_point(destructor:braft.ResetPeerResponse)
  SharedDtor();
}

void ResetPeerResponse::SharedDtor() {
}

void ResetPeerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetPeerResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResetPeerResponse& ResetPeerResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsResetPeerResponse();
  return *internal_default_instance();
}

ResetPeerResponse* ResetPeerResponse::New(::google::protobuf::Arena* arena) const {
  ResetPeerResponse* n = new ResetPeerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetPeerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.ResetPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ResetPeerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.ResetPeerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:braft.ResetPeerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.ResetPeerResponse)
  return false;
#undef DO_
}

void ResetPeerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.ResetPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.ResetPeerResponse)
}

::google::protobuf::uint8* ResetPeerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.ResetPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.ResetPeerResponse)
  return target;
}

size_t ResetPeerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.ResetPeerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetPeerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.ResetPeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetPeerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetPeerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.ResetPeerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.ResetPeerResponse)
    MergeFrom(*source);
  }
}

void ResetPeerResponse::MergeFrom(const ResetPeerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.ResetPeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ResetPeerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.ResetPeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetPeerResponse::CopyFrom(const ResetPeerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.ResetPeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetPeerResponse::IsInitialized() const {
  return true;
}

void ResetPeerResponse::Swap(ResetPeerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetPeerResponse::InternalSwap(ResetPeerResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetPeerResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotResponse::SnapshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsSnapshotResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.SnapshotResponse)
}
SnapshotResponse::SnapshotResponse(const SnapshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:braft.SnapshotResponse)
}

void SnapshotResponse::SharedCtor() {
  _cached_size_ = 0;
}

SnapshotResponse::~SnapshotResponse() {
  // @@protoc_insertion_point(destructor:braft.SnapshotResponse)
  SharedDtor();
}

void SnapshotResponse::SharedDtor() {
}

void SnapshotResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapshotResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotResponse& SnapshotResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsSnapshotResponse();
  return *internal_default_instance();
}

SnapshotResponse* SnapshotResponse::New(::google::protobuf::Arena* arena) const {
  SnapshotResponse* n = new SnapshotResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.SnapshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnapshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.SnapshotResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:braft.SnapshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.SnapshotResponse)
  return false;
#undef DO_
}

void SnapshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.SnapshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.SnapshotResponse)
}

::google::protobuf::uint8* SnapshotResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.SnapshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.SnapshotResponse)
  return target;
}

size_t SnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.SnapshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.SnapshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.SnapshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.SnapshotResponse)
    MergeFrom(*source);
  }
}

void SnapshotResponse::MergeFrom(const SnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.SnapshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SnapshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.SnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotResponse::CopyFrom(const SnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.SnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotResponse::IsInitialized() const {
  return true;
}

void SnapshotResponse::Swap(SnapshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotResponse::InternalSwap(SnapshotResponse* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapshotResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLeaderRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLeaderRequest::kGroupIdFieldNumber;
const int GetLeaderRequest::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLeaderRequest::GetLeaderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsGetLeaderRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.GetLeaderRequest)
}
GetLeaderRequest::GetLeaderRequest(const GetLeaderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_id()) {
    group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
  }
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_peer_id()) {
    peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.GetLeaderRequest)
}

void GetLeaderRequest::SharedCtor() {
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetLeaderRequest::~GetLeaderRequest() {
  // @@protoc_insertion_point(destructor:braft.GetLeaderRequest)
  SharedDtor();
}

void GetLeaderRequest::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLeaderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLeaderRequest::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLeaderRequest& GetLeaderRequest::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsGetLeaderRequest();
  return *internal_default_instance();
}

GetLeaderRequest* GetLeaderRequest::New(::google::protobuf::Arena* arena) const {
  GetLeaderRequest* n = new GetLeaderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLeaderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.GetLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!group_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!peer_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*peer_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLeaderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.GetLeaderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_id().data(), static_cast<int>(this->group_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.GetLeaderRequest.group_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_peer_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_id().data(), static_cast<int>(this->peer_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.GetLeaderRequest.peer_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.GetLeaderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.GetLeaderRequest)
  return false;
#undef DO_
}

void GetLeaderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.GetLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.GetLeaderRequest.group_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->group_id(), output);
  }

  // optional string peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.GetLeaderRequest.peer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->peer_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.GetLeaderRequest)
}

::google::protobuf::uint8* GetLeaderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.GetLeaderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string group_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_id().data(), static_cast<int>(this->group_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.GetLeaderRequest.group_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->group_id(), target);
  }

  // optional string peer_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_id().data(), static_cast<int>(this->peer_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.GetLeaderRequest.peer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->peer_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.GetLeaderRequest)
  return target;
}

size_t GetLeaderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.GetLeaderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string group_id = 1;
  if (has_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_id());
  }
  // optional string peer_id = 2;
  if (has_peer_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLeaderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.GetLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLeaderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLeaderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.GetLeaderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.GetLeaderRequest)
    MergeFrom(*source);
  }
}

void GetLeaderRequest::MergeFrom(const GetLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.GetLeaderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_group_id();
      group_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_peer_id();
      peer_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peer_id_);
    }
  }
}

void GetLeaderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.GetLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLeaderRequest::CopyFrom(const GetLeaderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.GetLeaderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLeaderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetLeaderRequest::Swap(GetLeaderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLeaderRequest::InternalSwap(GetLeaderRequest* other) {
  using std::swap;
  group_id_.Swap(&other->group_id_);
  peer_id_.Swap(&other->peer_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLeaderRequest::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetLeaderResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLeaderResponse::kLeaderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLeaderResponse::GetLeaderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_braft_2fcli_2eproto::InitDefaultsGetLeaderResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:braft.GetLeaderResponse)
}
GetLeaderResponse::GetLeaderResponse(const GetLeaderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leader_id()) {
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
  // @@protoc_insertion_point(copy_constructor:braft.GetLeaderResponse)
}

void GetLeaderResponse::SharedCtor() {
  _cached_size_ = 0;
  leader_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetLeaderResponse::~GetLeaderResponse() {
  // @@protoc_insertion_point(destructor:braft.GetLeaderResponse)
  SharedDtor();
}

void GetLeaderResponse::SharedDtor() {
  leader_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetLeaderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLeaderResponse::descriptor() {
  ::protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLeaderResponse& GetLeaderResponse::default_instance() {
  ::protobuf_braft_2fcli_2eproto::InitDefaultsGetLeaderResponse();
  return *internal_default_instance();
}

GetLeaderResponse* GetLeaderResponse::New(::google::protobuf::Arena* arena) const {
  GetLeaderResponse* n = new GetLeaderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLeaderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:braft.GetLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!leader_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*leader_id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLeaderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:braft.GetLeaderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string leader_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leader_id().data(), static_cast<int>(this->leader_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "braft.GetLeaderResponse.leader_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:braft.GetLeaderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:braft.GetLeaderResponse)
  return false;
#undef DO_
}

void GetLeaderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:braft.GetLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.GetLeaderResponse.leader_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->leader_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:braft.GetLeaderResponse)
}

::google::protobuf::uint8* GetLeaderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:braft.GetLeaderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string leader_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leader_id().data(), static_cast<int>(this->leader_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "braft.GetLeaderResponse.leader_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->leader_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:braft.GetLeaderResponse)
  return target;
}

size_t GetLeaderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:braft.GetLeaderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string leader_id = 1;
  if (has_leader_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->leader_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLeaderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:braft.GetLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLeaderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLeaderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:braft.GetLeaderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:braft.GetLeaderResponse)
    MergeFrom(*source);
  }
}

void GetLeaderResponse::MergeFrom(const GetLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:braft.GetLeaderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_leader_id()) {
    set_has_leader_id();
    leader_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leader_id_);
  }
}

void GetLeaderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:braft.GetLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLeaderResponse::CopyFrom(const GetLeaderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:braft.GetLeaderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLeaderResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GetLeaderResponse::Swap(GetLeaderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLeaderResponse::InternalSwap(GetLeaderResponse* other) {
  using std::swap;
  leader_id_.Swap(&other->leader_id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLeaderResponse::GetMetadata() const {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_braft_2fcli_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CliService::~CliService() {}

const ::google::protobuf::ServiceDescriptor* CliService::descriptor() {
  protobuf_braft_2fcli_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_braft_2fcli_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* CliService::GetDescriptor() {
  return descriptor();
}

void CliService::add_peer(::google::protobuf::RpcController* controller,
                         const ::braft::AddPeerRequest*,
                         ::braft::AddPeerResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method add_peer() not implemented.");
  done->Run();
}

void CliService::remove_peer(::google::protobuf::RpcController* controller,
                         const ::braft::RemovePeerRequest*,
                         ::braft::RemovePeerResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method remove_peer() not implemented.");
  done->Run();
}

void CliService::change_peers(::google::protobuf::RpcController* controller,
                         const ::braft::ChangePeersRequest*,
                         ::braft::ChangePeersResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method change_peers() not implemented.");
  done->Run();
}

void CliService::reset_peer(::google::protobuf::RpcController* controller,
                         const ::braft::ResetPeerRequest*,
                         ::braft::ResetPeerResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method reset_peer() not implemented.");
  done->Run();
}

void CliService::snapshot(::google::protobuf::RpcController* controller,
                         const ::braft::SnapshotRequest*,
                         ::braft::SnapshotResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method snapshot() not implemented.");
  done->Run();
}

void CliService::get_leader(::google::protobuf::RpcController* controller,
                         const ::braft::GetLeaderRequest*,
                         ::braft::GetLeaderResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method get_leader() not implemented.");
  done->Run();
}

void CliService::transfer_leader(::google::protobuf::RpcController* controller,
                         const ::braft::TransferLeaderRequest*,
                         ::braft::TransferLeaderResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method transfer_leader() not implemented.");
  done->Run();
}

void CliService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_braft_2fcli_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      add_peer(controller,
             ::google::protobuf::down_cast<const ::braft::AddPeerRequest*>(request),
             ::google::protobuf::down_cast< ::braft::AddPeerResponse*>(response),
             done);
      break;
    case 1:
      remove_peer(controller,
             ::google::protobuf::down_cast<const ::braft::RemovePeerRequest*>(request),
             ::google::protobuf::down_cast< ::braft::RemovePeerResponse*>(response),
             done);
      break;
    case 2:
      change_peers(controller,
             ::google::protobuf::down_cast<const ::braft::ChangePeersRequest*>(request),
             ::google::protobuf::down_cast< ::braft::ChangePeersResponse*>(response),
             done);
      break;
    case 3:
      reset_peer(controller,
             ::google::protobuf::down_cast<const ::braft::ResetPeerRequest*>(request),
             ::google::protobuf::down_cast< ::braft::ResetPeerResponse*>(response),
             done);
      break;
    case 4:
      snapshot(controller,
             ::google::protobuf::down_cast<const ::braft::SnapshotRequest*>(request),
             ::google::protobuf::down_cast< ::braft::SnapshotResponse*>(response),
             done);
      break;
    case 5:
      get_leader(controller,
             ::google::protobuf::down_cast<const ::braft::GetLeaderRequest*>(request),
             ::google::protobuf::down_cast< ::braft::GetLeaderResponse*>(response),
             done);
      break;
    case 6:
      transfer_leader(controller,
             ::google::protobuf::down_cast<const ::braft::TransferLeaderRequest*>(request),
             ::google::protobuf::down_cast< ::braft::TransferLeaderResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& CliService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::braft::AddPeerRequest::default_instance();
    case 1:
      return ::braft::RemovePeerRequest::default_instance();
    case 2:
      return ::braft::ChangePeersRequest::default_instance();
    case 3:
      return ::braft::ResetPeerRequest::default_instance();
    case 4:
      return ::braft::SnapshotRequest::default_instance();
    case 5:
      return ::braft::GetLeaderRequest::default_instance();
    case 6:
      return ::braft::TransferLeaderRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& CliService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::braft::AddPeerResponse::default_instance();
    case 1:
      return ::braft::RemovePeerResponse::default_instance();
    case 2:
      return ::braft::ChangePeersResponse::default_instance();
    case 3:
      return ::braft::ResetPeerResponse::default_instance();
    case 4:
      return ::braft::SnapshotResponse::default_instance();
    case 5:
      return ::braft::GetLeaderResponse::default_instance();
    case 6:
      return ::braft::TransferLeaderResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

CliService_Stub::CliService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
CliService_Stub::CliService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
CliService_Stub::~CliService_Stub() {
  if (owns_channel_) delete channel_;
}

void CliService_Stub::add_peer(::google::protobuf::RpcController* controller,
                              const ::braft::AddPeerRequest* request,
                              ::braft::AddPeerResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void CliService_Stub::remove_peer(::google::protobuf::RpcController* controller,
                              const ::braft::RemovePeerRequest* request,
                              ::braft::RemovePeerResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void CliService_Stub::change_peers(::google::protobuf::RpcController* controller,
                              const ::braft::ChangePeersRequest* request,
                              ::braft::ChangePeersResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void CliService_Stub::reset_peer(::google::protobuf::RpcController* controller,
                              const ::braft::ResetPeerRequest* request,
                              ::braft::ResetPeerResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void CliService_Stub::snapshot(::google::protobuf::RpcController* controller,
                              const ::braft::SnapshotRequest* request,
                              ::braft::SnapshotResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void CliService_Stub::get_leader(::google::protobuf::RpcController* controller,
                              const ::braft::GetLeaderRequest* request,
                              ::braft::GetLeaderResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void CliService_Stub::transfer_leader(::google::protobuf::RpcController* controller,
                              const ::braft::TransferLeaderRequest* request,
                              ::braft::TransferLeaderResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace braft

// @@protoc_insertion_point(global_scope)
